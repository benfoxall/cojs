# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block is the name of the service
service: cojs

plugins:
  - serverless-dynamodb-local
  - serverless-offline

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-2 # London
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}-cells
    JWT_SECRET: ${file(./config.yml):jwt_secret}
    pusher_app_id: ${file(./config.yml):pusher_app_id}
    pusher_key: ${file(./config.yml):pusher_key}
    pusher_secret: ${file(./config.yml):pusher_secret}
    pusher_cluster: ${file(./config.yml):pusher_cluster}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

# The `functions` block defines what code to deploy
functions:
  helloWorld:
    handler: src/session.create
    events:
      - http:
          path: session
          method: post
          cors: true

  update:
    handler: src/session.update
    events:
      - http:
          path: cells/{session}/{ref}
          method: post
          cors: true

  delete:
    handler: src/session.delete
    events:
      - http:
          path: cells/{session}/{ref}
          method: delete
          cors: true

  fetch:
    handler: src/session.fetch
    events:
      - http:
          path: cells/{session}
          method: get
          cors: true

  proxy:
    handler: src/session.proxy
    events:
      - http:
          path: proxy.html
          method: get
          cors: true

resources:
  Resources:
    CellsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: session
            AttributeType: S
          -
            AttributeName: ref
            AttributeType: N
        KeySchema:
          -
            AttributeName: session
            KeyType: HASH
          -
            AttributeName: ref
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
